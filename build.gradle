plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.2.0",
    junitVersion = "5.9.0",
    slf4jVersion = "1.7.32",
    jacksonVersion = "2.13.4",
    selenideVersion = "6.8.1",
    allureVersion = "2.19.0",
    fakerVersion = "1.0.2",
    ownerVersion = "1.0.4"

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}